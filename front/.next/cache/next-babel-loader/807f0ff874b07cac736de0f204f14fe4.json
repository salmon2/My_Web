{"ast":null,"code":"import createSagaMiddleware from 'redux-saga';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from '../reducers/index';\nimport rootSaga from '../sagas/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/project/Kit-Diary/front/store/configure-store.js"],"names":["createSagaMiddleware","createWrapper","createStore","compose","applyMiddleware","reducer","rootSaga","composeWithDevTools","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC7B,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AAEC,MAAMU,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAGJ,mBAAmB,CAACH,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CAApC;AACA,MAAME,KAAK,GAAGV,WAAW,CAACG,OAAD,EAAUM,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBR,QAAnB,CAAjB;AACA,SAAOM,KAAP;AACA,CARD;;AASA,IAAMG,OAAO,GAAGd,aAAa,CAACO,cAAD,EAAiB;AAAEQ,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import createSagaMiddleware from 'redux-saga'\r\nimport { createWrapper } from 'next-redux-wrapper'\r\nimport { createStore, compose, applyMiddleware } from 'redux'\r\nimport reducer from '../reducers/index'\r\nimport rootSaga from '../sagas/index'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst configureStore = () => {\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n\tconst middlewares = [sagaMiddleware]\r\n\tconst enhancer = composeWithDevTools(applyMiddleware(...middlewares))\r\n\tconst store = createStore(reducer, enhancer)\r\n\tstore.sagaTask = sagaMiddleware.run(rootSaga)\r\n\treturn store\r\n}\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development'}) \r\n\r\nexport default wrapper"]},"metadata":{},"sourceType":"module"}
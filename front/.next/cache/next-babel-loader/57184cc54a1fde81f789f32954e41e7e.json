{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(userinfo),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchUser),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_FAILRUE, LOG_IN_SUCCESS, LOG_IN_REQUEST, SIGNUP_REQUEST, SIGNUP_FAILRUE, SIGNUP_SUCCESSUSER_REQUEST, USER_SUCCESS, USER_FAILRUE, USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nfunction logInAPI() {\n  return axios.post('/api/user/login', body); //다른 리소스 간에 자원공유, course orgin\n}\n\nfunction signupAPI() {\n  return axios.post('/api/user/join', body);\n}\n\nfunction userAPI() {\n  return axios.get(\"/api/user/:\".concat(body));\n}\n\nfunction userinfo(action) {\n  return _regeneratorRuntime.wrap(function userinfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('user_saga');\n          console.log('action.data not json: ', action.data.userid);\n          _context.prev = 2;\n          _context.next = 5;\n          return put({\n            type: USER_SUCCESS,\n            //\n            data: //result.data\n            {\n              id: '2',\n              //primary key\n              email: 'asdf@asdf',\n              password: 'asdf',\n              stdnum: 123123,\n              major: 'asdf',\n              nickname: 'asdfasdf'\n            }\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n          _context.next = 11;\n          return put({\n            type: USER_FAILRUE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 7]]);\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('login_saga');\n          console.log('login data : ', action.data);\n          _context2.prev = 2;\n          _context2.next = 5;\n          return call(logInAPI, action.data);\n\n        case 5:\n          result = _context2.sent;\n          _context2.next = 8;\n          return put({\n            type: LOG_IN_SUCCESS,\n            //\n            data: result.data\n          });\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](2);\n          _context2.next = 14;\n          return put({\n            type: LOG_IN_FAILRUE,\n            error: _context2.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 10]]);\n}\n\nfunction signup(action) {\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('signup_saga');\n          console.log('action.data not json: ', action.data);\n          _context3.prev = 2;\n          _context3.next = 5;\n          return put({\n            type: SIGNUP_SUCCESS,\n            data: null\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](2);\n          _context3.next = 11;\n          return put({\n            type: SIGNUP_FAILRUE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 7]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(SIGNUP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchUser() {\n  return _regeneratorRuntime.wrap(function watchUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(USER_REQUEST, userinfo);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogIn), fork(watchSignup), fork(watchUser)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["D:/project/MyWeb/front/sagas/user.js"],"names":["userinfo","logIn","signup","watchLogIn","watchSignup","watchUser","userSaga","all","fork","call","put","takeLatest","LOG_IN_FAILRUE","LOG_IN_SUCCESS","LOG_IN_REQUEST","SIGNUP_REQUEST","SIGNUP_FAILRUE","SIGNUP_SUCCESSUSER_REQUEST","USER_SUCCESS","USER_FAILRUE","USER_REQUEST","axios","defaults","baseURL","logInAPI","post","body","signupAPI","userAPI","get","action","console","log","data","userid","type","id","email","password","stdnum","major","nickname","error","response","result","SIGNUP_SUCCESS"],"mappings":"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","sourcesContent":["import { all, fork, call, put, takeLatest } from 'redux-saga/effects'\r\nimport {LOG_IN_FAILRUE, LOG_IN_SUCCESS, LOG_IN_REQUEST, SIGNUP_REQUEST,SIGNUP_FAILRUE, SIGNUP_SUCCESSUSER_REQUEST\r\n\t,USER_SUCCESS\r\n\t,USER_FAILRUE\r\n\t,USER_REQUEST\r\n\t} from '../reducers/user'\r\n\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL=\"http://localhost:3000\"\r\n\r\nfunction logInAPI() {\r\n\treturn axios.post('/api/user/login', body) //다른 리소스 간에 자원공유, course orgin\r\n}\r\n\r\nfunction signupAPI(){\r\n\treturn axios.post('/api/user/join', body)\r\n}\r\n\r\nfunction userAPI(){\r\n\treturn axios.get(`/api/user/:${body}`);\r\n}\r\n\r\n\r\nfunction* userinfo(action) {\r\n\tconsole.log('user_saga')\r\n\tconsole.log('action.data not json: ', action.data.userid)\r\n\ttry {\r\n\t\t//const result = yield call(userAPI, action.data.userid)\r\n\t\tyield put({\r\n\t\t\ttype: USER_SUCCESS,\t//\r\n\t\t\tdata: //result.data\r\n\t\t\t\t{\r\n\t\t\t\t\tid: '2', //primary key\r\n\t\t\t\t\temail: 'asdf@asdf',\r\n\t\t\t\t\tpassword: 'asdf',\r\n\t\t\t\t\tstdnum: 123123,\r\n\t\t\t\t\tmajor:  'asdf',\r\n\t\t\t\t\tnickname: 'asdfasdf',\r\n\t\t\t}\r\n\t\t})\t\r\n\t} catch (error) {\r\n\t\tyield put({\r\n\t\t\ttype: USER_FAILRUE,\r\n\t\t\terror: error.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\n\r\nfunction* logIn(action) {\r\n\tconsole.log('login_saga')\r\n\tconsole.log('login data : ', action.data)\r\n\ttry {\r\n\t\tconst result = yield call(logInAPI, action.data)\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_SUCCESS,\t//\r\n\t\t\tdata: result.data,\r\n\t\t})\t\r\n\t} catch (error) {\r\n\t\tyield put({\r\n\t\t\ttype: LOG_IN_FAILRUE,\r\n\t\t\terror: error.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction* signup(action) {\r\n\tconsole.log('signup_saga')\r\n\tconsole.log('action.data not json: ', action.data)\r\n\ttry {\r\n\t\t// const result = yield call(signupAPI, action.data)\r\n\t\tyield put({\r\n\t\t\ttype: SIGNUP_SUCCESS,\r\n\t\t\tdata: null\r\n\t\t})\t\r\n\t} catch (error) {\r\n\t\tyield put({\r\n\t\t\ttype: SIGNUP_FAILRUE,\r\n\t\t\terror: error.response.data\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction* watchLogIn() {\r\n\tyield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchSignup(){\r\n\tyield takeLatest(SIGNUP_REQUEST, signup)\r\n}\r\n\r\nfunction* watchUser(){\r\n\tyield takeLatest(USER_REQUEST, userinfo)\r\n}\r\n\r\nexport default function* userSaga() {\r\n\tyield all([\r\n\t\tfork(watchLogIn),\r\n\t\tfork(watchSignup),\r\n\t\tfork(watchUser),\r\n\t])\r\n}"]},"metadata":{},"sourceType":"module"}
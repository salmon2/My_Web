{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from \"next/router\";\nexport const initialState = {\n  user: {\n    id: '',\n    //primary key\n    email: '',\n    password: '',\n    stdnum: 0,\n    major: '',\n    nickname: ''\n  },\n  fetchinUpdate: false,\n  //로그인 중 상태확인\n  isLoggedIn: false\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILRUE = 'LOG_IN_FAILRUE';\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILRUE = 'SIGNUP_FAILRUE';\nexport const LOG_OUT = 'LOG_OUT';\nexport const logInAction = data => {\n  //console.log('logInAction');\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport const SignupAction = data => {\n  console.log('SignupAction');\n  console.log(data);\n  return {\n    type: SIGNUP_REQUEST,\n    data: data\n  };\n};\nexport const logOutAction = () => {\n  return {\n    type: LOG_OUT,\n    user: null\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      //console.log('login_request')\n      //console.log('login' + JSON.stringify(action.data));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: true,\n        isLoggedIn: false\n      });\n\n    case LOG_IN_SUCCESS:\n      sessionStorage.setItem('islogined', true);\n      Router.push('/');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.data,\n        fetchinUpdate: false,\n        isLoggedIn: true\n      });\n\n    case LOG_IN_FAILRUE:\n      console.log('fail');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: false,\n        isLoggedIn: false\n      });\n\n    case SIGNUP_REQUEST:\n      console.log('signup_request');\n      console.log('signup_' + JSON.stringify(action.data));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: true\n      });\n\n    case SIGNUP_SUCCESS:\n      console.log('signup_success');\n      console.log('signup_' + JSON.stringify(action.data));\n      alert('signup_success');\n      Router.push(\"/login\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: false\n      });\n\n    case SIGNUP_FAILRUE:\n      console.log('signup_fail');\n      console.log('signup_' + JSON.stringify(action.data));\n      alert('signup_fail');\n      Router.push(\"/signup\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: false\n      });\n\n    case LOG_OUT:\n      sessionStorage.setItem('islogined', false);\n      sessionStorage.removeItem('user');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/project/My_Web/front/reducers/user.js"],"names":["Router","initialState","user","id","email","password","stdnum","major","nickname","fetchinUpdate","isLoggedIn","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILRUE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILRUE","LOG_OUT","logInAction","data","type","SignupAction","console","log","logOutAction","reducer","state","action","sessionStorage","setItem","push","JSON","stringify","alert","removeItem"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\r\nexport const initialState = {\r\n  user:{\r\n    id: '', //primary key\r\n    email: '',\r\n    password: '',\r\n    stdnum: 0,\r\n    major:  '',\r\n    nickname: '',\r\n  },\r\n\r\n\r\n  fetchinUpdate: false,   //로그인 중 상태확인\r\n  isLoggedIn: false,\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILRUE = 'LOG_IN_FAILRUE'\r\n\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAILRUE = 'SIGNUP_FAILRUE'\r\n\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\n\r\nexport const logInAction = (data) => {\r\n  //console.log('logInAction');\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data: data\r\n  }\r\n}\r\n\r\nexport const SignupAction = (data) => {\r\n  console.log('SignupAction');\r\n  console.log(data);\r\n  return {\r\n    type: SIGNUP_REQUEST,\r\n    data: data\r\n  }\r\n}\r\n\r\n\r\nexport const logOutAction = () => {\r\n  return {\r\n    type: LOG_OUT,\r\n    user: null\r\n  }\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n  switch(action.type){\r\n      case LOG_IN_REQUEST:\r\n        //console.log('login_request')\r\n        //console.log('login' + JSON.stringify(action.data));\r\n          return {\r\n              ...state,\r\n              fetchinUpdate: true,\r\n              isLoggedIn: false,\r\n          };\r\n      case LOG_IN_SUCCESS:\r\n        sessionStorage.setItem('islogined', true);\r\n        Router.push('/');\r\n        return { \r\n          ...state,\r\n          user : action.data,\r\n          fetchinUpdate: false,\r\n          isLoggedIn: true,\r\n        }\r\n      case LOG_IN_FAILRUE:\r\n          console.log('fail');\r\n          return {\r\n              ...state,\r\n              fetchinUpdate: false,\r\n              isLoggedIn: false,\r\n          }\r\n      case SIGNUP_REQUEST:\r\n        console.log('signup_request')\r\n        console.log('signup_' + JSON.stringify(action.data));\r\n        return{\r\n          ...state,\r\n          fetchinUpdate:true,\r\n        }\r\n      case SIGNUP_SUCCESS:\r\n          console.log('signup_success')\r\n          console.log('signup_' + JSON.stringify(action.data));\r\n          alert('signup_success')\r\n          Router.push(\"/login\")\r\n          return{\r\n            ...state,\r\n            fetchinUpdate:false,\r\n        }\r\n      case SIGNUP_FAILRUE:\r\n        console.log('signup_fail')\r\n        console.log('signup_' + JSON.stringify(action.data));\r\n        alert('signup_fail')\r\n        Router.push(\"/signup\")\r\n        return{\r\n          ...state,\r\n          fetchinUpdate:false,\r\n         }\r\n\r\n\r\n      case LOG_OUT:\r\n        sessionStorage.setItem('islogined', false);\r\n        sessionStorage.removeItem('user');\r\n        return {\r\n            ...state,\r\n            isLoggedIn: false,\r\n        }\r\n      default:\r\n          return state ;\r\n  }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}
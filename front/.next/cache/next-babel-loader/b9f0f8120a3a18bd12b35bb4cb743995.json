{"ast":null,"code":"import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_FAILRUE, LOG_IN_SUCCESS, LOG_IN_REQUEST, SIGNUP_REQUEST, SIGNUP_FAILRUE, SIGNUP_SUCCESS, USER_SUCCESS, USER_FAILRUE, USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:7000\";\n\nfunction logInAPI(body) {\n  return axios.post('/api/user/login', body); //다른 리소스 간에 자원공유, course orgin\n}\n\nfunction signupAPI(body) {\n  return axios.post('/api/user/join', body);\n}\n\nfunction infoAPI(body) {\n  return axios.post('/api/user/info', body);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: null\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILRUE,\n      data: null\n    });\n  }\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGNUP_SUCCESS,\n      data: null\n    });\n  } catch (error) {\n    yield put({\n      type: SIGNUP_FAILRUE,\n      error: null\n    });\n  }\n}\n\nfunction* info(action) {\n  try {\n    const result = yield call(infoAPI, action.data);\n    yield put({\n      type: USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: USER_FAILRUE,\n      data: null\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* watchInfo() {\n  yield takeLatest(USER_REQUEST, info);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchSignup) //fork(watchInfo),\n  ]);\n}","map":{"version":3,"sources":["D:/project/My_Web/front/sagas/user.js"],"names":["all","fork","call","put","takeLatest","LOG_IN_FAILRUE","LOG_IN_SUCCESS","LOG_IN_REQUEST","SIGNUP_REQUEST","SIGNUP_FAILRUE","SIGNUP_SUCCESS","USER_SUCCESS","USER_FAILRUE","USER_REQUEST","axios","defaults","baseURL","logInAPI","body","post","signupAPI","infoAPI","logIn","action","result","data","type","err","signup","error","info","watchLogIn","watchSignup","watchInfo","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACCC,cADD,EACiBC,cADjB,EACiCC,cADjC,EAECC,cAFD,EAEgBC,cAFhB,EAEgCC,cAFhC,EAGCC,YAHD,EAGcC,YAHd,EAG2BC,YAH3B,QAIQ,kBAJR;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAuB,uBAAvB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACvB,SAAOJ,KAAK,CAACK,IAAN,CAAW,iBAAX,EAA8BD,IAA9B,CAAP,CADuB,CACoB;AAC3C;;AAED,SAASE,SAAT,CAAmBF,IAAnB,EAAwB;AACvB,SAAOJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6BD,IAA7B,CAAP;AACA;;AAED,SAASG,OAAT,CAAiBH,IAAjB,EAAsB;AACrB,SAAOJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6BD,IAA7B,CAAP;AACA;;AAED,UAAUI,KAAV,CAAgBC,MAAhB,EAAwB;AACvB,MAAI;AACH,UAAMC,MAAM,GAAG,MAAMtB,IAAI,CAACe,QAAD,EAAWM,MAAM,CAACE,IAAlB,CAAzB;AACA,UAAMtB,GAAG,CAAC;AACTuB,MAAAA,IAAI,EAACpB,cADI;AAETmB,MAAAA,IAAI,EAAC;AAFI,KAAD,CAAT;AAIA,GAND,CAME,OAAOE,GAAP,EAAY;AACb,UAAMxB,GAAG,CAAC;AACTuB,MAAAA,IAAI,EAACrB,cADI;AAEToB,MAAAA,IAAI,EAAC;AAFI,KAAD,CAAT;AAIA;AACD;;AAED,UAAUG,MAAV,CAAiBL,MAAjB,EAAyB;AACxB,MAAI;AACH,UAAMC,MAAM,GAAG,MAAMtB,IAAI,CAACkB,SAAD,EAAYG,MAAM,CAACE,IAAnB,CAAzB;AACA,UAAMtB,GAAG,CAAC;AACTuB,MAAAA,IAAI,EAAEhB,cADG;AAETe,MAAAA,IAAI,EAAE;AAFG,KAAD,CAAT;AAIA,GAND,CAME,OAAOI,KAAP,EAAc;AACf,UAAM1B,GAAG,CAAC;AACTuB,MAAAA,IAAI,EAAEjB,cADG;AAEToB,MAAAA,KAAK,EAAE;AAFE,KAAD,CAAT;AAIA;AACD;;AACD,UAAUC,IAAV,CAAeP,MAAf,EAAuB;AACtB,MAAI;AACH,UAAMC,MAAM,GAAG,MAAMtB,IAAI,CAACmB,OAAD,EAAUE,MAAM,CAACE,IAAjB,CAAzB;AACA,UAAMtB,GAAG,CAAC;AACTuB,MAAAA,IAAI,EAACf,YADI;AAETc,MAAAA,IAAI,EAACD,MAAM,CAACC;AAFH,KAAD,CAAT;AAIA,GAND,CAME,OAAOE,GAAP,EAAY;AACb,UAAMxB,GAAG,CAAC;AACTuB,MAAAA,IAAI,EAACd,YADI;AAETa,MAAAA,IAAI,EAAC;AAFI,KAAD,CAAT;AAIA;AACD;;AACD,UAAUM,UAAV,GAAuB;AACtB,QAAM3B,UAAU,CAACG,cAAD,EAAiBe,KAAjB,CAAhB;AACA;;AAED,UAAUU,WAAV,GAAuB;AACtB,QAAM5B,UAAU,CAACI,cAAD,EAAiBoB,MAAjB,CAAhB;AACA;;AACD,UAAUK,SAAV,GAAqB;AACpB,QAAM7B,UAAU,CAACS,YAAD,EAAeiB,IAAf,CAAhB;AACA;;AAED,eAAe,UAAUI,QAAV,GAAqB;AACnC,QAAMlC,GAAG,CAAC,CACTC,IAAI,CAAC8B,UAAD,CADK,EAET9B,IAAI,CAAC+B,WAAD,CAFK,CAGT;AAHS,GAAD,CAAT;AAKA","sourcesContent":["import { all, fork, call, put, takeLatest } from 'redux-saga/effects'\r\nimport {\r\n\tLOG_IN_FAILRUE, LOG_IN_SUCCESS, LOG_IN_REQUEST, \r\n\tSIGNUP_REQUEST,SIGNUP_FAILRUE, SIGNUP_SUCCESS,\r\n\tUSER_SUCCESS,USER_FAILRUE,USER_REQUEST\r\n\t} from '../reducers/user'\r\n\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL=\"http://localhost:7000\"\r\n\r\nfunction logInAPI(body) {\r\n\treturn axios.post('/api/user/login', body) //다른 리소스 간에 자원공유, course orgin\r\n}\r\n\r\nfunction signupAPI(body){\r\n\treturn axios.post('/api/user/join', body)\r\n}\r\n\r\nfunction infoAPI(body){\r\n\treturn axios.post('/api/user/info', body)\r\n}\r\n\r\nfunction* logIn(action) {\r\n\ttry {\r\n\t\tconst result = yield call(logInAPI, action.data);\r\n\t\tyield put({\r\n\t\t\ttype:LOG_IN_SUCCESS,\r\n\t\t\tdata:null,\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype:LOG_IN_FAILRUE,\r\n\t\t\tdata:null,\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction* signup(action) {\r\n\ttry {\r\n\t\tconst result = yield call(signupAPI, action.data)\r\n\t\tyield put({\r\n\t\t\ttype: SIGNUP_SUCCESS,\r\n\t\t\tdata: null\r\n\t\t})\t\r\n\t} catch (error) {\r\n\t\tyield put({\r\n\t\t\ttype: SIGNUP_FAILRUE,\r\n\t\t\terror: null,\r\n\t\t})\r\n\t}\r\n}\r\nfunction* info(action) {\r\n\ttry {\r\n\t\tconst result = yield call(infoAPI, action.data);\r\n\t\tyield put({\r\n\t\t\ttype:USER_SUCCESS,\r\n\t\t\tdata:result.data,\r\n\t\t})\r\n\t} catch (err) {\r\n\t\tyield put({\r\n\t\t\ttype:USER_FAILRUE,\r\n\t\t\tdata:null,\r\n\t\t})\r\n\t}\r\n}\r\nfunction* watchLogIn() {\r\n\tyield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchSignup(){\r\n\tyield takeLatest(SIGNUP_REQUEST, signup)\r\n}\r\nfunction* watchInfo(){\r\n\tyield takeLatest(USER_REQUEST, info)\r\n}\r\n\r\nexport default function* userSaga() {\r\n\tyield all([\r\n\t\tfork(watchLogIn),\r\n\t\tfork(watchSignup),\r\n\t\t//fork(watchInfo),\r\n\t])\r\n}"]},"metadata":{},"sourceType":"module"}
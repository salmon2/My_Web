{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from \"next/router\";\nexport const initialState = {\n  posts: [{\n    id: 0,\n    //primery key\n    userid: 0,\n    //foreigin key\n    star: 5,\n    date: 0,\n    classification: '전공',\n    professor: 'ggg',\n    class: '기초프로그래밍',\n    title: '좋아용',\n    contents: '너무 좋아용afsdfsfsafsfdsffsdafsdfdsfsdfadfasdfafsadfdafsa',\n    like: 3,\n    dislike: 1\n  }],\n  fetchinUpdate: false //리스트 업데이트 중 상태확인\n\n};\nexport const POST_SAVE_REQUEST = 'POST_SAVE_REQUEST';\nexport const POST_SAVE_SUCCESS = 'POST_SAVE_SUCCESS';\nexport const POST_SAVE_FAILRUE = 'POST_SAVE_FAILRUE';\nexport const POST_REMOVE_REQUEST = 'POST_REMOVE_REQUEST';\nexport const POST_REMOVE_SUCCESS = 'POST_REMOVE_SUCCESS';\nexport const POST_REMOVE_FAILRUE = 'POST_REMOVE_FAILRUE';\nexport const POST_SEARCH_REQUEST = 'POST_SEARCH_REQUEST';\nexport const POST_SEARCH_SUCCESS = 'POST_SEARCH_SUCCESS';\nexport const POST_SEARCH_FAILRUE = 'POST_SEARCH_FAILRUE';\nexport const POST_LIST_REQUEST = 'POST_LIST_REQUEST';\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS';\nexport const POST_LIST_FAILRUE = 'POST_LIST_FAILRUE';\nexport const POST_REVISION_REQUEST = 'POST_REVISION_REQUEST';\nexport const POST_REVISION_SUCCESS = 'POST_REVISION_SUCCESS';\nexport const POST_REVISION_FAILRUE = 'POST_REVISION_FAILRUE';\nexport const post_save = data => {\n  console.log('post_save');\n  return {\n    type: POST_SAVE_REQUEST,\n    data: data\n  };\n};\nexport const post_remove = id => {\n  console.log('post_remove');\n  return {\n    type: POST_REMOVE_REQUEST,\n    data: id\n  };\n};\nexport const post_search = data => {\n  console.log('post_read');\n  return {\n    type: POST_SEARCH_REQUEST,\n    data: data\n  };\n};\nexport const post_list = () => {\n  console.log('post_list');\n  return {\n    type: POST_LIST_REQUEST,\n    data: null\n  };\n};\nexport const post_revision = data => {\n  console.log('post_revision');\n  return {\n    type: POST_REVISION_REQUEST,\n    data: data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_SAVE_REQUEST:\n      console.log('POST_SAVE_REQUEST : ' + action.data);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: true\n      });\n\n    case POST_SAVE_SUCCESS:\n      alert('save success');\n      return {\n        state,\n        fetchinUpdate: false\n      };\n\n    case POST_SAVE_FAILRUE:\n      alert('save fail');\n      Router.push(\"/ReviewWrite\");\n      return {\n        state,\n        fetchinUpdate: false\n      };\n\n    case POST_REMOVE_REQUEST:\n      return {\n        state,\n        fetchinUpdate: true\n      };\n\n    case POST_REMOVE_SUCCESS:\n      alert('delete success');\n      return {\n        state,\n        fetchinUpdate: false\n      };\n\n    case POST_REMOVE_FAILRUE:\n      alert('delete fail');\n      return {\n        state,\n        fetchinUpdate: false\n      };\n\n    case POST_SEARCH_REQUEST:\n      return {\n        state,\n        fetchinUpdate: true\n      };\n\n    case POST_SEARCH_SUCCESS:\n      console.log(action.data);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.data,\n        fetchinUpdate: false\n      });\n\n    case POST_SEARCH_FAILRUE:\n      alert('posts_loading_fail');\n      return {\n        state,\n        fetchinUpdate: false\n      };\n\n    case POST_LIST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: true\n      });\n\n    case POST_LIST_SUCCESS:\n      console.log('list_success_data:' + action.data);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.data,\n        fetchinUpdate: false\n      });\n\n    case POST_LIST_FAILRUE:\n      alert('posts_loading_fail');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdata: false\n      });\n\n    case POST_REVISION_REQUEST:\n      return {\n        state,\n        fetchinUpdate: true\n      };\n\n    case POST_REVISION_SUCCESS:\n      console.log('success_ revision');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetchinUpdate: false\n      });\n\n    case POST_REVISION_FAILRUE:\n      alert('posts_loading_fail');\n      return {\n        state,\n        fetchinUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/project/Kit-Diary/front/reducers/post.js"],"names":["Router","initialState","posts","id","userid","star","date","classification","professor","class","title","contents","like","dislike","fetchinUpdate","POST_SAVE_REQUEST","POST_SAVE_SUCCESS","POST_SAVE_FAILRUE","POST_REMOVE_REQUEST","POST_REMOVE_SUCCESS","POST_REMOVE_FAILRUE","POST_SEARCH_REQUEST","POST_SEARCH_SUCCESS","POST_SEARCH_FAILRUE","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAILRUE","POST_REVISION_REQUEST","POST_REVISION_SUCCESS","POST_REVISION_FAILRUE","post_save","data","console","log","type","post_remove","post_search","post_list","post_revision","reducer","state","action","alert","push","fetchinUpdata"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\r\n\r\nexport const initialState = {\r\n  posts:[\t\t\t\t\r\n    {\r\n      id: 0, //primery key\r\n      userid: 0, //foreigin key\r\n\r\n      star : 5,\r\n      date: 0,\r\n\r\n      classification : '전공',\r\n      professor: 'ggg',\r\n      class: '기초프로그래밍',\r\n      title: '좋아용',\r\n      contents:'너무 좋아용afsdfsfsafsfdsffsdafsdfdsfsdfadfasdfafsadfdafsa',\r\n\r\n      like: 3,\r\n      dislike: 1,\r\n    },\r\n  ],\r\n  fetchinUpdate: false,   //리스트 업데이트 중 상태확인\r\n}\r\n\r\nexport const POST_SAVE_REQUEST = 'POST_SAVE_REQUEST';\r\nexport const POST_SAVE_SUCCESS = 'POST_SAVE_SUCCESS';\r\nexport const POST_SAVE_FAILRUE = 'POST_SAVE_FAILRUE';\r\n\r\nexport const POST_REMOVE_REQUEST = 'POST_REMOVE_REQUEST';\r\nexport const POST_REMOVE_SUCCESS = 'POST_REMOVE_SUCCESS';\r\nexport const POST_REMOVE_FAILRUE = 'POST_REMOVE_FAILRUE';\r\n\r\nexport const POST_SEARCH_REQUEST = 'POST_SEARCH_REQUEST';\r\nexport const POST_SEARCH_SUCCESS = 'POST_SEARCH_SUCCESS';\r\nexport const POST_SEARCH_FAILRUE = 'POST_SEARCH_FAILRUE';\r\n\r\nexport const POST_LIST_REQUEST = 'POST_LIST_REQUEST';\r\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS';\r\nexport const POST_LIST_FAILRUE = 'POST_LIST_FAILRUE';\r\n\r\nexport const POST_REVISION_REQUEST = 'POST_REVISION_REQUEST';\r\nexport const POST_REVISION_SUCCESS = 'POST_REVISION_SUCCESS';\r\nexport const POST_REVISION_FAILRUE = 'POST_REVISION_FAILRUE';\r\n\r\n\r\nexport const post_save = (data) => {\r\n  console.log('post_save');\r\n  return{\r\n    type: POST_SAVE_REQUEST,\r\n    data: data\r\n  }\r\n}\r\n\r\nexport const post_remove = (id) => {\r\n  console.log('post_remove');\r\n  return{\r\n    type: POST_REMOVE_REQUEST,\r\n    data: id\r\n  }\r\n}\r\nexport const post_search = (data) => {\r\n  console.log('post_read');\r\n  return{\r\n    type: POST_SEARCH_REQUEST,\r\n    data: data\r\n  }\r\n}\r\n\r\nexport const post_list = () => {\r\n  console.log('post_list');\r\n  return{\r\n    type: POST_LIST_REQUEST,\r\n    data:null\r\n  }\r\n}\r\n\r\nexport const post_revision = (data) => {\r\n  console.log('post_revision');\r\n  return{\r\n    type: POST_REVISION_REQUEST,\r\n    data:data\r\n  }\r\n}\r\n\r\nconst reducer = (state=initialState, action) =>{\r\n  switch(action.type){    \r\n    case POST_SAVE_REQUEST:\r\n      console.log('POST_SAVE_REQUEST : ' + action.data);\r\n      return {\r\n        ...state,\r\n        fetchinUpdate:true\r\n      }\r\n    case POST_SAVE_SUCCESS:\r\n      alert('save success')\r\n      return {\r\n       state,\r\n       fetchinUpdate:false\r\n      }\r\n\r\n    case POST_SAVE_FAILRUE:\r\n      alert('save fail')\r\n      Router.push(\"/ReviewWrite\")\r\n      return {\r\n        state,\r\n        fetchinUpdate:false\r\n      }\r\n\r\n\r\n    case POST_REMOVE_REQUEST:\r\n        return { \r\n          state,\r\n          fetchinUpdate:true\r\n        }\r\n    case POST_REMOVE_SUCCESS:\r\n      alert('delete success')\r\n      return {\r\n        state,\r\n        fetchinUpdate:false\r\n      }\r\n    case POST_REMOVE_FAILRUE:\r\n      alert('delete fail')\r\n      return {\r\n        state,\r\n        fetchinUpdate:false\r\n      }\r\n\r\n\r\n    case POST_SEARCH_REQUEST: \r\n      return {\r\n        state,\r\n        fetchinUpdate:true\r\n      }\r\n    case POST_SEARCH_SUCCESS: \r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        posts:action.data,\r\n        fetchinUpdate:false\r\n      }\r\n    case POST_SEARCH_FAILRUE: \r\n      alert('posts_loading_fail')  \r\n      return {\r\n        state,\r\n        fetchinUpdate:false\r\n      }\r\n\r\n\r\n    case POST_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        fetchinUpdate:true\r\n      }\r\n\r\n    case POST_LIST_SUCCESS:\r\n      console.log('list_success_data:'+ action.data);\r\n      return {\r\n        ...state,\r\n        posts:action.data,\r\n        fetchinUpdate:false\r\n      }\r\n\r\n    case POST_LIST_FAILRUE:\r\n      alert('posts_loading_fail')  \r\n      return{\r\n          ...state,\r\n          fetchinUpdata:false\r\n        }\r\n\r\n    case POST_REVISION_REQUEST: \r\n      return {\r\n        state,\r\n        fetchinUpdate:true\r\n      }\r\n    case POST_REVISION_SUCCESS: \r\n      console.log('success_ revision')\r\n      return {\r\n        ...state,\r\n        fetchinUpdate:false\r\n      }\r\n    case POST_REVISION_FAILRUE: \r\n      alert('posts_loading_fail')  \r\n      return {\r\n        state,\r\n        fetchinUpdate:false\r\n      }\r\n\r\n    default:\r\n      return state ;\r\n  }\r\n}\r\n                      \r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}